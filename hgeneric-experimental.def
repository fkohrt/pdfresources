%%
%% This is file `hgeneric-experimental.def',
%% This is an adapted version of hluatex.def
%% meant to test the use of the commands
%% from pdfresources.sty
%%
%% drivers are loaded in line 4745 in hyperref.sty in a \Hy@AtEndOfPackage command.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% list of new internal commands
%% \__hyp_link_dest_begin:nw : start command for links to internal destination
%%                             replaces \find@pdflink
%% \__hyp_link_dest_end:
%% \__hyp_destination:n     :  sets an anchor, replaces \new@pdflink
%% \__hyp_PageLabels_gpush: : puts pagelabels in the catalog, used on every storing
%% \__hyp_pstringdef:Nn     : replaces Hy@pstringdef, converts n to pdfstring and stores in N
%%                            naming??
%% \__hyp_text_purify:Nn   : replaces the first step of \pdfstringdef/\Hy@pdfstringdef
%%                           currently simply \text_purify:n
%% \__hyp_info_generate_addons: what did this do??
%% list of new variables
%% \l__hyp_pdfa_bool : for pdfa option (unclear if it will stay)
%% \c__hyp_destname_undefined_tl
%% \g__hyp_AcroForm_CoFields_prop
%% \g__hyp_AcroForm_Fields_prop
%% \l__hyp_tmpa_seq
%% \l__hyp_tmpa_box
%% \l__hyp_tmpa_tl
%% \l__hyp_destname_tmpa_tl
%% \l__hyp_uri_tmpa_tl
%% \l__hyp_filename_tmpa_tl
%% \l__hyp_para_tmpa_tl
%% \l__hyp_CheckmarkYes_tl
%% \l__hyp_CheckmarkOff_tl
%% \l__hyp_RadioYes_tl
%% list of commands which probably will have to change
%%   \Hy@EXPsetpdfborder
%%   \Hy@EXPsetpdfhighlight
%%   \Hy@EXPsetbordercolor
%%   \hypupdateattribute
\ProvidesFile{hgeneric-experimental.def}
  [2020/03/16 v0.5 %
  Hyperref driver for luaTeX]
\RequirePackage{pdfresources}
\RequirePackage{xparse,etoolbox}
\RequirePackage{new-pdfescape} %temporarly!
\chardef\Hy@VersionChecked=1 %don't check the version!
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\ExplSyntaxOn
%% messages, should later (with more drivers) go somewhere more generic ...
\prop_gput:Nnn \g_msg_module_name_prop { hyp }{ hyperref }

\cs_new:Npn \__hyp_clist_display:n #1 {*~#1\\}
\msg_new:nnn
  { hyp }
  { missing-bookmark-package }
  { The~bookmark~package~is~required~for~this~hyperref~driver! }

\msg_new:nnn
  { hyp }
  { pdfversion-disabled }
  { This~hyperref~driver~ignores~the~pdfversion~key!\\
    Set~the~pdfversion~in~\token_to_str:N \DeclareDocumentMetaData }

\msg_new:nnn
  { hyp }
  { pdfa-no-push-button }
  { PDF/A:~Push~button~with~JavaScript~is~prohibited }

\msg_new:nnn
  { hyp }
  { pdfa-no-reset-button }
  { PDF/A:~Reset~action~is~prohibited }

\msg_new:nnn
  { hyp }
  { empty-destination-name }
  {
    Empty~destination~name,\\
            using~`#1'
  }
\msg_new:nnn
  { hyp }
  { ignore-deprecated-or-unknown-option-in-pdf-version }
  {
    Option~`#1'~is~unknown~or~deprecated~in\\
    pdf~version~#2.~Ignored.
  }
\msg_new:nnn
  { hyp }
  { ignore-deprecated-or-unknown-value-in-pdf-version }
  {
    Value~`#1'~is~unknown~or~deprecated~in\\
    pdf~version~#2.~Ignored.
  }
\msg_new:nnn
  { hyp }
  { replace-deprecated-or-unknown-value-in-pdf-version }
  {
    Value~`#1'~is~unknown~or~deprecated~in\\
    pdf~version~#2. Value~`#3'~is used instead.
  }
\msg_new:nnn
  { hyp }
  { unknown-key }
  {
    unknown~key~#2~of~module~’#1’~set~to~’#3’.
  }
\msg_new:nnn
  { hyp }
  { unknown-choice }
  {
    Value~'#3'~is~invalid~for~key~'#1'.\\
    The~key~accepts~only~the~choices\\
    \clist_map_function:nN { #2 }\__hyp_clist_display:n
  }

\msg_new:nnn
  { hyp }
  { unknown-choice+empty }
  {
    Value~'#3'~is~invalid~for~key~'#1'.\\
    The~key~accepts~only~the~choices\\
    \clist_map_function:nN { #2 }\__hyp_clist_display:n
    An~empty~value~removes~the~setting.
  }

\msg_new:nnn
  { hyp }
  { no-bool }
  {
    Value~'#2'~is~invalid~for~key~'#1'.\\
    The~key~accepts~only~the~choices\\
    *~true\\
    *~false \\
    *~and~an~empty~value~which~removes~the~setting.\\
    No~value~is~equivalent~to~using~`true`.
  }



%% I require the bookmark package to get rid of some of the bookmarks code.
% but the testing code doesn't work.
% !!!!!!!!!!!!!!!!!!!!! to do !!!!!!!!!!!!!!!!!!!!!
%\Hy@AtEndOfPackage{% so that we are later than KOMA ...
%\AtBeginDocument
% {
%  \ltx@ifpackageloaded{bookmark}
%   {}
%   {\msg_error:nn {hyp}{missing-bookmark-package}}
% }}
% booleans for the (some) option keys. As hyperref disables them it is okay to set them here,
% hypersetup  can't interfere

%%%%%%%%%%%%%%%%
% defaults, will perhaps need some sorting and be checked if they are sensible for all backends
%%%%%%%%%%%%%%%
\providecommand*{\XR@ext}{pdf} %ok as default for all drivers we want to support, should probably go into hyperref
\Hy@setbreaklinks{true}        %also for dvips??

% checked dvips, luatex, xetex, dvipdfm: values are identical:
\providecommand*\@pdfborder{0~0~1}
\providecommand*\@pdfborderstyle{}
\providecommand*\@pdfview{XYZ}

% unicode ...
\HyPsd@LoadUnicode
\Hy@unicodetrue
\let\HyPsd@pdfencoding\HyPsd@pdfencoding@unicode

\pdfannot_link_margin:n { 1pt }

%%%%%%%%%%

% tmp
\box_new:N \l__hyp_tmpa_box
\tl_new:N  \l__hyp_tmpa_tl
\tl_new:N  \l__hyp_destname_tmpa_tl %needed?
\tl_new:N  \l__hyp_uri_tmpa_tl
\tl_new:N  \l__hyp_filename_tmpa_tl
\tl_new:N  \l__hyp_para_tmpa_tl
\int_new:N \l__hyp_tmpa_int

% const
\tl_const:Nn \c__hyp_destname_undefined_tl {UNDEFINED}

%variables
\tl_new:N  \g__hyp_pdfstartpage_tl
\tl_new:N  \g__hyp_pdfstartview_tl

% booleans
%%% pdfa key:
\bool_new:N \l__hyp_pdfa_bool
\ifHy@pdfa
  \bool_set_true:N \l__hyp_pdfa_bool
\fi

\prop_const_from_keyval:Nn \c__hyp_map_linktypes_prop
  {
    URI   = url,
    GoTo  = link,
    GoToR = file,
    Named = menu,
    Launch= run
  }

%regex for destinations
\regex_const:Nn \c__hyp_dest_view_regex
  {
    \A\ *
     (?:
      (?:XYZ (?:\ +(?:(?:\d+|\d*\.\d+)|null)){0,3})
      |
      (?:Fit|FitB)
      |
      (?:(?:FitH|FitV|FitBH|FitBV)(?:\ +(?:\d+|\d*\.\d+)|null)??)
      |
      (?:FitR (?:\ +\d+|\d*\.\d+){4})
     )
     \ *\Z
  }

% this need sorting out later. pdf standards should be handled outside the driver.
% pdfa forces the flag /F 4 in some places.
\AtBeginDocument
  {
    \bool_if:NT \l__hyp_pdfa_bool
      {
        \pdfdict_put:nnn
          {annot/Link/URI}
          { F }
          { 4 }

        \pdfdict_put:nnn
          {annot/Link/GoTo}
          { F }
          { 4 }

        \pdfdict_put:nnn
          {annot/Link/GoToR}
          { F }
          { 4 }

        \pdfdict_put:nnn
          {annot/Link/Named}
          { F }
          { 4 }
      }
  }

%% conversion macro, replacement for \pdfstringdef
% first the purify step
% a hook, but there will need for a wrapper interface ...

\hook_new:n {hyp/text/purify}

\cs_new_protected:Npn \__hyp_text_purify:nN #1 #2
  {
     \hook_use:n {hyp/text/purify}
     \tl_set:Nx #2 {\text_purify:n { #1 } }
  }

% this takes the output of \__hyp_text_purify and applies a converter
% #1 = text, #2 = converter #3 output
% #2 should be hex_print for \pdftool_textstringhex_print:nN
%              hex for \pdftool_textstringhex:nN
%           or lit_print for \pdftool_textstringlit_print:nN
%           or lit for \pdftool_textstringlit:nN
\cs_new_protected:Npn \__hyp_text_convert:NnN #1 #2 #3
  {
     \use:c { pdftool_textstring#2:VN } #1 #3
  }

%% combining both:
% #1=input, #2= handler shortcut #3 output command
\cs_new_protected:Npn \__hyp_text_pdfdef:nnN #1 #2 #3
 {
   \__hyp_text_purify:nN {#1}\l__hyp_tmpa_tl
   \__hyp_text_convert:NnN \l__hyp_tmpa_tl { #2 } #3
 }

% variants of hyperref commands to get attributes in the prop
% these are (temporary) commands to fill various attributes (color, border style) in
% the hooks for links from the hyperref keys.

% pdfborder, pdfborderstyle

\cs_new_protected:Npn \Hy@EXPsetpdfborder
  {
    \seq_map_inline:Nn \c_pdfannot_link_types_seq
      {
        \tl_if_empty:NTF \@pdfborder
          {
            \pdfdict_remove:nn {annot/Link/##1}{Border}
          }
          {
            \pdfdict_put:nnx
              {annot/Link/##1}
              { Border }
              { [\@pdfborder] }
          }
        \tl_if_empty:NTF \@pdfborderstyle
          {
            \pdfdict_remove:nn {annot/Link/##1} { BS }
          }
          {
           \pdfdict_put:nnx
              {annot/Link/##1}
              { BS }
              { <<\@pdfborderstyle>> }
          }
      }
  }

% highlight
\cs_new_protected:Npn \Hy@EXPsetpdfhighlight
  {
    \seq_map_inline:Nn \c_pdfannot_link_types_seq
      {
        \tl_if_empty:NTF \@pdfhighlight
          {
            \pdfdict_remove:nn {annot/Link/##1}{ H }
          }
          {
             \pdfdict_put:nnx
              {annot/Link/##1}
              { H }
              { \@pdfhighlight }
         }
     }
  }

% bordercolor
\cs_new_protected:Npn \Hy@EXPsetbordercolor
  {
    \seq_map_inline:Nn \c_pdfannot_link_types_seq
      {
        \tl_if_exist:cTF { @\prop_item:Nn\c__hyp_map_linktypes_prop{##1}bordercolor }
          {
            \pdfdict_put:nnx
              {annot/Link/##1}
              { C }
              { [\tl_use:c {@\prop_item:Nn\c__hyp_map_linktypes_prop{##1}bordercolor}] }
          }
          {
            \pdfdict_remove:nn {annot/Link/##1} { C }
          }
     }
  }

% for now we are updating the attributes manually after \hypersetup
% some better method must be found
\NewDocumentCommand\hypupdateattribute { }
 {
   \Hy@EXPsetpdfborder
   \Hy@EXPsetpdfhighlight
   \Hy@EXPsetbordercolor
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% page labels.
%% current implemention in hyperref/hyperref drivers
% xetex: hxetex line 80-110
%        \HyPL@StorePageLabel writes to the aux-file
%        at begin document (after reading the aux)
%        \HyPL@SetPageLabels is called (defined in hyperref.sty after the driver
%        loading)
%        which calls \Hy@PutCatalog{/PageLabels<</Nums[\HyPL@Labels]>>}%
% dvips  identical to xetex, line 60 to 90 in pdfmark.def
% dvipdfm identical to xetex
% pdftex \HyPL@StorePageLabel stores in \HyPL@Labels in the first compilation
%        \AtVeryEndDocument \HyPL@SetPageLabels is called.
% luatex identical to pdftex
% The code in hyperref inspects \thepage and tries to figure out
% the numbering system and the prefix. E.g. A-\arabic{page} is correctly split.
% If the counter can not be identified hyperref generates only /P entries with the
% whole content.
%% new implementation
% pdftex/luatex
% \AtVeryEndDocument is too late for pdflatex/lualatex the catalog is already pushed
% out. So we update the catalog entry when storing the page label.
% we do not try to avoid the "useless" pagelabel entry /PageLabels <</Nums[0<</S/D>>]>>
% (but it would be possible), we also don't test for empty \thepage, hyperref seems to
% handle this fine and the pdf is valid.

% catalog mapped to expl3 command
% \Hy@PutCatalog is used only in one place but we
% we need this for the dvips/xetex route for the page labels.
% we simply hard code this for now until hyperref.sty itself can be adapted ...
\cs_new_protected:Npn\__hyp_PageLabels_gpush:
  {
    \pdfdict_gput:nnx {Catalog} {PageLabels}{<</Nums[\HyPL@Labels]>>}
  }


\pdf@ifdraftmode %from pdftexcmds replace??
  {
    \let\Hy@PutCatalog \use_none:n
  }
  {
    \def\Hy@PutCatalog #1 { \__hyp_PageLabels_gpush: }
  }

\legacy_if:nT { Hy@pdfpagelabels }
  {
    \sys_if_output_pdf:TF
      { %pdflatex,lualatex
        \cs_set_protected:Npn \HyPL@StorePageLabel #1
          {
            \tl_gput_right:Nx \HyPL@Labels { \the\Hy@abspage<<#1>> }
            \__hyp_PageLabels_gpush:
          }
      }
      { %xetex, dvips, dvipdfmx
        \cs_set_protected:Npn \HyPL@StorePageLabel #1
          {
            \legacy_if:nT { @filesw }
              {
                 \iow_now:Nx\@mainaux
                   {
                      \exp_not:N \HyPL@Entry{\the\Hy@abspage<<#1>>}
                   }
              }
          }
        \Hy@AtBeginDocument
          {
            \legacy_if:nT { @filesw }
              {
                \iow_now:Nn \@mainaux
                   {
                      \providecommand*\HyPL@Entry[1]{}
                   }
              }
            \tl_if_empty:NTF \HyPL@Labels
              {
                \Hy@WarningNoLine{Rerun~to~get~/PageLabels~entry}
              }
              {
                \HyPL@SetPageLabels
              }
              \cs_set_eq:NN \HyPL@Entry \use_none:n
           }
         \cs_set_protected:Npn \HyPL@Entry #1
           {
              \tl_gset:No \HyPL@Labels
                {
                   \HyPL@Labels
                   #1
                }
           }
      }
  }

%replace Hy@pstringdef definition.
%!!!!!!!! check if utf16 (string or hex) isn't better, see new-pdfescape!!!!!!!!!
\cs_new:Npn \__hyp_pstringdef:Nn #1 #2
  {
    \group_begin:
    \char_set_catcode_other:N \~
    \char_set_active_eq:NN \~ \c_tilde_str
    \char_set_catcode_active:N \~
    \sys_if_engine_pdftex:TF
      { %pdftex. Should we assume utf8 or allow other input encodings?
        \str_gset_convert:Nnnn \g_tmpa_str {#2}{utf8}{utf8/string} %utf8 because of hyperref
      }
      { %luatex,xetex
        \str_gset_convert:Nnnn \g_tmpa_str {#2}{}{utf8/string} %utf8 because of hyperref
      }
    \group_end:
    \str_set_eq:NN#1 \g_tmpa_str
  }
\cs_generate_variant:Nn \__hyp_pstringdef:Nn {No,Nx}

% can go when all occurences in the driver have been replaced.
\cs_set_eq:NN\Hy@pstringdef \__hyp_pstringdef:Nx

%these patterns are used in hyperref checks.
%it is unclear if they are really useful and if a backend support is
%needed.
\str_case:VnF \c_sys_backend_str
 {
   { pdfmode }
   {
     \def\HyPat@ObjRef
      {
       [0-9]*[1-9][0-9]*~0~R
      }
   }
   { dvipdfmx }
   {
     \def\HyPat@ObjRef
      {
        @[^~]+
      }
   }
   { xdvipdfmx }
   {
     \def\HyPat@ObjRef
      {
        @[^~]+
      }
   }
 }
 { %also set in hyperref sty, so probably not needed.
   \def\HyPat@ObjRef/{.+}
 }

%we force the setting of pdfversion in \DeclareDocumentMetaData
\cs_set_eq:NN \Hy@pdfminorversion \pdf_version_minor:
\cs_set_eq:NN \Hy@pdfmajorversion \pdf_version_major:

\legacy_if:nT { Hy@ocgcolorlinks }
  {
    \pdf_version_min_gset:n { 1.5 }
  }

\legacy_if:nT { Hy@setpdfversion }
 {
    \msg_warning:nn { hyp }{ pdfversion-disabled }
 }


\Hy@DisableOption{pdfversion}%

% ocg colorlinks should be done as in ocgx. This here
% are boxes ...
\legacy_if:nTF {Hy@ocgcolorlinks}
  {
    \newcommand\OBJ@OCG@view {} % for the hyperref test
    \pdf@ifdraftmode
      {}
      {
        \pdf_object_new:nn   { l__hyp_ocg_view_dict_obj }   { dict }
        \pdf_object_new:nn   { l__hyp_ocg_print_dict_obj }  { dict }
        \pdf_object_new:nn   { l__hyp_ocg_config_dict_obj } { dict }
        \pdf_object_new:nn   { l__hyp_ocg_ref_array_obj }   { array }
        \pdf_object_write:nx { l__hyp_ocg_ref_array_obj }
          {
            \pdf_object_ref:n { l__hyp_ocg_view_dict_obj }
            \c_space_tl
            \pdf_object_ref:n { l__hyp_ocg_print_dict_obj }
          }
        \pdf_object_write:nn { l__hyp_ocg_view_dict_obj }
          {
            /Type/OCG
            /Name(View)
            /Usage
             <<
              /Print <</PrintState/OFF>>~
              /View  <</ViewState/ON  >>~
             >>
          }
        \pdf_object_write:nn { l__hyp_ocg_print_dict_obj }
          {
            /Type/OCG
            /Name(Print)
            /Usage
             <<
              /Print <</PrintState/ON>>~
              /View  <</ViewState/OFF>>~
             >>
          }
       \pdfdict_gput:nnx { Catalog / OCProperties }{OCGs }{ \pdf_object_ref:n {l__hyp_ocg_view_dict_obj} }
       \pdfdict_gput:nnx { Catalog / OCProperties }{OCGs }{ \pdf_object_ref:n {l__hyp_ocg_print_dict_obj} }
       \pdf_object_write:nx { l__hyp_ocg_config_dict_obj }
         {
           /OFF[\pdf_object_ref:n { l__hyp_ocg_print_dict_obj }]
           /AS[
             <<
              /Event/View
              /OCGs\c_space_tl \pdf_object_ref:n { l__hyp_ocg_ref_array_obj }
              /Category[/View]
             >>
             <<
              /Event/Print
              /OCGs\c_space_tl \pdf_object_ref:n { l__hyp_ocg_ref_array_obj }
              /Category[/Print]
             >>
             <<
              /Event/Export
              /OCGs\c_space_tl \pdf_object_ref:n { l__hyp_ocg_ref_array_obj }
              /Category[/Print]
             >>
              ]
         }
       \pdfdict_gput:nnx { Catalog / OCProperties }{ D }{ \pdf_object_ref:n { l__hyp_ocg_config_dict_obj} }
    }
    \Hy@AtBeginDocument
      {
        \def\Hy@colorlink#1
          {
            \group_begin:
            \legacy_if:nTF {Hy@ocgcolorlinks}
              {
                \def\Hy@ocgcolor{#1}
                \hbox_set:Nw \l__hyp_tmpa_box
              }
              {
                \HyColor@UseColor#1
              }
          }
        \def\Hy@endcolorlink
         {
           \legacy_if:nT {Hy@ocgcolorlinks}
             {
               \hbox_set_end:
               \mbox
                 {
                   \pdf_bdc:nn {OC}{l__hyp_ocg_print_dict_obj}
                   \hbox_overlap_right:n { \box_use:N \l__hyp_tmpa_box }
                   \pdf_emc:
                   \pdf_bdc:nn {OC}{l__hyp_ocg_view_dict_obj}
                   \group_begin:
                   \expandafter\HyColor@UseColor\Hy@ocgcolor
                   \box_use_drop:N \l__hyp_tmpa_box
                   \group_end:
                   \pdf_emc:
                }
             }
           \group_end:
         }
      }
   }
   {
     \Hy@DisableOption{ocgcolorlinks}
   }

\cs_set_protected:Npn \setpdflinkmargin #1
  {
    \pdfannot_link_margin:n { #1 }
  }

% internal definitions for anchors (destinations) and links to destinations.

\Hy@WrapperDef \__hyp_destination:n #1 % #1 is a destination name.
  {
    \mode_if_horizontal:T { \@savsf\spacefactor }
    \Hy@SaveLastskip      %defined in hyperref
    \Hy@VerboseAnchor{#1} %defined in hyperref, for debugging
    \__hyp_pstringdef:Nx  \l__hyp_tmpa_tl { \HyperDestNameFilter{#1} } %
    \exp_args:NV \pdf_destination:nf { \l__hyp_tmpa_tl } { \@pdfview } %
    \Hy@RestoreLastskip   %defined in hyperref
    \mode_if_horizontal:T { \spacefactor\@savsf }
  }

\cs_new_protected:Npn \__hyp_link_dest_begin:nw #1
  {
    \mode_leave_vertical:
    \protected@edef \l__hyp_destname_tmpa_tl { #1 }
    \tl_if_empty:NTF \l__hyp_destname_tmpa_tl
      {
        \msg_warning:nnx
          { hyp }
          { empty-destination-name }
          { \c__hyp_destname_undefined_tl }
        \tl_set_eq:NN \l__hyp_destname_tmpa_tl \c__hyp_destname_undefined_tl
      }
      { %I hope this is right ...
        \__hyp_pstringdef:Nx \l__hyp_destname_tmpa_tl
          {
            \exp_args:No \HyperDestNameFilter { \l__hyp_destname_tmpa_tl }
          }
      }
    \exp_args:No
      \pdfannot_link_goto_begin:nw  { \l__hyp_destname_tmpa_tl }
        \Hy@colorlink\@linkcolor
  }

\cs_new_protected:Npn \__hyp_link_dest_end:
  {
    \Hy@endcolorlink
    \pdfannot_link_goto_end:
  }

%% hyperref commands for destinations (anchor) and links to destinations

\cs_new_protected:Npn \hyper@anchor #1
  {
    \__hyp_destination:n {#1}\anchor@spot
  }

\cs_new_protected:Npn \hyper@anchorstart#1
  {
    \__hyp_destination:n {#1}
    \Hy@activeanchortrue
  }

\cs_new_protected:Npn \hyper@anchorend
  {
    \Hy@activeanchorfalse
  }


% hyper@linkstart/ \hyper@linkend is used for
% footnotemarks, toc and natbib-cites
% #1 is for the color only: found {cite} and {link}
% #2 is the destination name

\cs_new_protected:Npn \hyper@link #1 #2 #3 %#1 ignored, #2=destination name, #3 content
 {
  \Hy@VerboseLinkStart{#1}{#2}
  \__hyp_link_dest_begin:nw {#2}#3\Hy@xspace@end
  \__hyp_link_dest_end:
  \Hy@VerboseLinkStop
}

\cs_new_protected:Npn \hyper@linkstart #1 #2 %#1 ignored, #2=destination name
  {
    \Hy@VerboseLinkStart{#1}{#2}% only for debug
    \__hyp_link_dest_begin:nw {#2}%
  }

\cs_new_protected:Npn \hyper@linkend
  {
    \__hyp_link_dest_end:
    \Hy@VerboseLinkStop
  }

%% this command is used for \url
\cs_new_protected:Npn \hyper@linkurl #1 #2  %#1:link text #2: URI,
  {
    \group_begin:
    \__hyp_pstringdef:Nx \l__hyp_uri_tmpa_tl { #2 }
    %hyper@chars, unneeded as used only once
    \cs_set_eq:NN \# \c_hash_str
    \cs_set_eq:NN \% \c_percent_str
    \Hy@safe@activestrue
    \mode_leave_vertical:
    %Subtype and A could probably also be handled with hooks if needed
    %but checks for all drivers should be done then.
    \pdfannot_link:nnn { URI }
      {
        /A
          <<
            % the action dictionary has no hook!
            /Type/Action~
            /S/URI~
            /URI(\l__hyp_uri_tmpa_tl)~
            \ifHy@href@ismap
              /IsMap~true%
            \fi
            \Hy@href@nextactionraw
          >>
      }
      {
        \Hy@colorlink\@urlcolor
        #1
        \Hy@xspace@end
        \Hy@endcolorlink
        \Hy@VerboseLinkStop %where is the start??
      }
    \group_end:
  }
\ExplSyntaxOff

\ExplSyntaxOn
%file links to pdfs. See test-filelinks.pdf for a few example.
\cs_new_protected:Npn \hyper@linkfile #1 #2 #3 % anchor text, filename, destname
  {
    \group_begin:
    \tl_set:Nn \l__hyp_filename_tmpa_tl { #2 }
    \Hy@CleanupFile \l__hyp_filename_tmpa_tl
    \__hyp_pstringdef:No \l__hyp_filename_tmpa_tl { \l__hyp_filename_tmpa_tl }
    \__hyp_pstringdef:Nn \l__hyp_destname_tmpa_tl { #3 }
    \Hy@MakeRemoteAction
    \mode_leave_vertical:
    \pdfannot_link:nnn %expansion??
      { GoToR }
      {
        /A<<
          /F( \l__hyp_filename_tmpa_tl )
          /S/GoToR
          \Hy@SetNewWindow
          \ifx\\#3\\
            /D[\Hy@href@page\@pdfremotestartview]
          \else
            /D( \l__hyp_destname_tmpa_tl )
          \fi
          \Hy@href@nextactionraw
        >>
      }
      {
        \Hy@colorlink\@filecolor
        #1\Hy@xspace@end
        \Hy@endcolorlink
        \Hy@VerboseLinkStop %where is the start??
      }
    \group_end:
  }

% use by run links xxxxxxxxxxx
%define \hyper@linklaunch for naming consistency
\use:x
  { % filename, anchor text, linkname
    \cs_set_protected:Npn \exp_not:N \@hyper@launch run \c_colon_str ##1 \exp_not:N \\ ##2 ##3
  }
  {
    \hyper@linklaunch {#1}{#2}{#3}
  }

\cs_new_protected:Npn \hyper@linklaunch #1 #2 #3 % filename, anchor text, Parameters
 {
  \group_begin:
    \__hyp_pstringdef:Nn \l__hyp_filename_tmpa_tl { #1 }
    \__hyp_pstringdef:Nn \l__hyp_para_tmpa_tl     { #3 }
    %\Hy@pstringdef\Hy@pstringF{#1}%
    %\Hy@pstringdef\Hy@pstringP{#3}%
    \mode_leave_vertical:
    \pdfannot_link:nnn %expansion?
     { Launch }
     {
       /A<<
          /F( \l__hyp_filename_tmpa_tl )
          /S/Launch
          \Hy@SetNewWindow
          \bool_if:nF
            {
              \tl_if_empty_p:N \l__hyp_para_tmpa_tl
              ||
              \pdf_version_compare_p:Nn > {1.9}
            }
            {
              /Win<</P(\l__hyp_para_tmpa_tl)/F(\l__hyp_filename_tmpa_tl)>>
            }
          \Hy@href@nextactionraw
         >>
      }
      {
        \Hy@colorlink\@runcolor
        #2\Hy@xspace@end
        \Hy@endcolorlink
        \Hy@VerboseLinkStop %where is the start??
      }
  \group_end:
}


%this needs central management in the kernel and changes in hyperref.
%with pdfresources most attributes can be set directly, there is not need
%to delay to the begin of the doc.
%as a first step hypersetup is overwritten to set (some) keys with expl3.
\cs_set_protected:Npn \hypersetup #1
  {
     \kvsetkeys{Hyp}{#1} %for now
     \keys_set:nn { hyp / setup }{ #1 }
     \hypupdateattribute
  }
% for now unknown keys should only give warnings.
\keys_define:nn { hyp / setup }
  {
    unknown .code:n =
    {
      \msg_warning:nnxxx { hyp } { unknown-key }
      { hyp~/~setup }{ \l_keys_key_str } { #1 }
    }
  }

% This means that the following keys should better be set only in hypersetup and
% not in the package options (they still could work, but ...)
% baseurl       (default: empty)
% pdflang       (default: empty, should be better set in DeclareDocumentMetaData)
% pdfpagelayout (default:not set, TwoPageLeft,TwoPageRight are 1.5 but we don't test)
% pdfpagemode   (default: UseNone or UseOutlines, bookmark should do the second)
% pdfpagescrop  (default: empty/do nothing)

\keys_define:nn { hyp / setup }
 {
   ,baseurl       .code:n =
     {
       \__hyp_pstringdef:No \l__hyp_tmpa_tl {#1}%
        \tl_if_empty:NTF \l__hyp_tmpa_tl
          {
             \pdfdict_gremove:nn {Catalog} { URI }
          }
          {
             \pdfdict_gput:nnx {Catalog} { URI }{ <</Base ( \l__hyp_tmpa_tl )>> }
          }
     }
   ,pdfcenterwindow    .choice:
   ,pdfcenterwindow / false .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences }{ CenterWindow }
     }
   ,pdfcenterwindow / true .code:n =
     {
       \pdfdict_gput:nnn {Catalog / ViewerPreferences } { CenterWindow }{ true }
     }
   ,pdfcenterwindow /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences }{ CenterWindow }
     }
   ,pdfcenterwindow / unknown .code:n =
     {
       \msg_warning:nnxx { hyp } { no-bool }
         { pdfcenterwindow }
         { \exp_not:n {#1} }
     }
   ,pdfcenterwindow    .default:n = true
   ,pdfdirection    .choice:
   ,pdfdirection / L2R .code:n =
     {
       \pdfdict_gput:nnn {Catalog / ViewerPreferences } { Direction }{ /L2R }
     }
   ,pdfdirection / R2L .code:n =
     {
       \pdfdict_gput:nnn {Catalog / ViewerPreferences } { Direction }{ /R2L }
     }
   ,pdfdirection /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { Direction }
     }
   ,pdfdirection / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfdirection }
         { L2R , R2L }
         { \exp_not:n {#1} }
     }
   ,pdfdisplaydoctitle    .choice:
   ,pdfdisplaydoctitle / false .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { DisplayDocTitle }
     }
   ,pdfdisplaydoctitle / true .code:n =
     {
       \pdfdict_gput:nnn {Catalog / ViewerPreferences } { DisplayDocTitle } { true }
     }
   ,pdfdisplaydoctitle    .default:n = true
   ,pdfduplex    .choices:nn =
     {Simplex, DuplexFlipShortEdge, DuplexFlipLongEdge}
     {
       \pdf_version_compare:NnTF > {1.6}
         {
           \pdfdict_gput:nnn {Catalog / ViewerPreferences }
             { PrintDuplex } { /#1 }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfduplex}
             {\pdf_version:}
         }
     }%
   ,pdfduplex /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { PrintDuplex }
     }
   ,pdfduplex / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfduplex }
         { Simplex, DuplexFlipShortEdge, DuplexFlipLongEdge }
         { \exp_not:n {#1} }
     }
   ,pdffitwindow    .choice:
   ,pdffitwindow / false .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences }  { FitWindow }
     }
   ,pdffitwindow / true .code:n =
     {
       \pdfdict_gput:nnn {Catalog / ViewerPreferences } { FitWindow } { true }
     }
   ,pdffitwindow /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { FitWindow }
     }
   ,pdffitwindow    .default:n = true
   ,pdffitwindow / unknown .code:n =
     {
       \msg_warning:nnxx { hyp } { no-bool }
         { pdffitwindow }
         { \exp_not:n {#1} }
     }
   ,pdflang       .code:n =
          {
            \tl_if_empty:nTF { #1 }
              {
                \pdfdict_gremove:nn {Catalog} { Lang }
              }
              {
                \pdfdict_gput:nnx {Catalog} { Lang } { (#1) }
              }
          }
   ,pdfmenubar    .choice:
   ,pdfmenubar / true .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { HideMenubar }
     }
   ,pdfmenubar / false .code:n =
     {
       \pdfdict_gput:nn {Catalog / ViewerPreferences }
          { HideMenubar } { true }
     }
   ,pdfmenubar /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { HideMenubar }
     }
   ,pdfmenubar    .default:n = true
   ,pdfmenubar / unknown .code:n =
     {
       \msg_warning:nnxx { hyp } { no-bool }
         { pdfmenubar }
         { \exp_not:n {#1} }
     }
   ,pdfnonfullscreenpagemode   .choices:nn =
     { UseNone, UseOutlines, UseThumbs, FullScreen, UseOC } %pdf 1.5
     {
       \pdfdict_gput:nnx {Catalog / ViewerPreferences }
         { NonFullScreenPageMode} {/#1}
     }
   ,pdfnonfullscreenpagemode / UseAttachments .code:n =
     {
       \pdf_version_compare:NnTF < {1.6}
         {
           %message
         }
         {
           \pdfdict_gput:nnx {Catalog / ViewerPreferences }
             {NonFullScreenPageMode}{/UseAttachments}
         }
     }
   ,pdfnonfullscreenpagemode /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { NonFullScreenPageMode }
     }
   ,pdfnonfullscreenpagemode / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfnonfullscreenpagemode }
         { UseNone, UseOutlines, UseThumbs, FullScreen, UseOC, UseAttachments (PDF 1.6) }
         { \exp_not:n {#1} }
     }
   ,pdfnumcopies .code:n =
     {
       \pdf_version_compare:NnTF > {1.6}
         {
           \tl_empty:nTF
             {
               \pdfdict_gremove:nn {Catalog / ViewerPreferences } { NumCopies }
             }
             {
               \pdfdict_gput:nnx {Catalog / ViewerPreferences }
                 {NumCopies}{#1}
             }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfnumcopies}
             {\pdf_version:}
         }
     }
   ,pdfpagelayout .choices:nn =
     { SinglePage, OneColumn, TwoColumnLeft, TwoColumnRight, TwoPageLeft, TwoPageRight}
     { \pdfdict_gput:nnx {Catalog} { PageLayout }{ /#1 } }
   ,pdfpagelayout / .code:n =
     { \pdfdict_gremove:nn {Catalog} { PageLayout } }
   ,pdfpagelayout / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfpagelayout }
         { SinglePage, OneColumn, TwoColumnLeft, TwoColumnRight, TwoPageLeft, TwoPageRight }
         { \exp_not:n {#1} }
     }
   ,pdfpagemode   .choices:nn =
     { UseNone, UseOutlines, UseThumbs, FullScreen, UseOC } %pdf 1.5
     { \pdfdict_gput:nnx {Catalog} { PageMode }{ /#1 } }
   ,pdfpagemode / UseAttachments .code:n =
     {
       \pdf_version_compare:NnTF > {1.5}
         {
           \pdfdict_gput:nnx {Catalog} { PageMode }{ /UseAttachments }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-value-in-pdf-version}
             {UseAttachments}
             {\pdf_version:}
         }
     }
   ,pdfpagemode   .initial:n  = { UseOutlines } %for now ...
   ,pdfpagemode / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfpagemode }
         { UseNone, UseOutlines, UseThumbs, FullScreen, UseOC, UseAttachments (PDF 1.6) }
         { \exp_not:n {#1} }
     }
   ,pdfpagescrop  .code:n =
     {
       \tl_if_empty:nTF %or blank?
         {
           \pdfdict_gremove:nn {Pages} { CropBox }
         }
         {
           \pdfdict_gput:nnx {Pages} { CropBox } { [#1] }
         }
     }
   ,pdfpicktraybypdfsize    .choice:
   ,pdfpicktraybypdfsize / true .code:n =
     {
       \pdf_version_compare:NnTF > {1.6}
         {
           \pdfdict_gput:nnn {Catalog / ViewerPreferences }
             { PickTrayByPDFSize } { true }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfpicktraybypdfsize}
             {\pdf_version:}
         }
     }
   ,pdfpicktraybypdfsize / false .code:n =
     {
       \pdf_version_compare:NnTF > {1.6}
         {
           \pdfdict_gput:nnn {Catalog / ViewerPreferences }
             { PickTrayByPDFSize } { false }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfpicktraybypdfsize}
             {\pdf_version:}
         }
     }
   ,pdfpicktraybypdfsize /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { PickTrayByPDFSize }
     }
   ,pdfpicktraybypdfsize / unknown .code:n =
     {
       \msg_warning:nnxx { hyp } { no-bool }
         { picktraybypdfsize }
         { \exp_not:n {#1} }
     }
   ,pdfprintarea    .choices:nn =
     { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
     {
       \pdf_version_compare:NnTF < {2.0}
         {
           \pdfdict_gput:nnx {Catalog / ViewerPreferences }
             { PrintArea } { /#1 }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfprintarea}
             {\pdf_version:}
         }
     }%
   ,pdfprintarea /  .code:n =
     { \pdfdict_gremove:nn {Catalog / ViewerPreferences } { PrintArea } }
   ,pdfprintarea / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfprintarea }
         { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
         { \exp_not:n {#1} }
     }
   ,pdfprintclip    .choices:nn =
     { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
     {
       \pdf_version_compare:NnTF < {2.0}
         {
           \pdfdict_gput:nnx {Catalog / ViewerPreferences }
             { PrintClip } { /#1 }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfprintclip}
             {\pdf_version:}
         }
     }%
   ,pdfprintclip /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { PrintClip }
     }
   ,pdfprintclip / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfprintclip }
         { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
         { \exp_not:n {#1} }
     }
   ,pdfprintpagerange .code:n =
     {
       \pdf_version_compare:NnTF > {1.6}
         {
           \tl_if_empty:nTF { #1}
             {
               \pdfdict_gremove:nn {Catalog / ViewerPreferences }
                 { PrintPageRange }
             }
             {
              \pdfdict_gput:nnx {Catalog / ViewerPreferences }
                 {PrintPageRange}{[#1]}
             }
         }
         {
            \msg_warning:nnxx
              {hyp}
              {ignore-deprecated-or-unknown-option-in-pdf-version}
              {pdfprintpagerange}
              {\pdf_version:}
         }
     }
   ,pdfprintscaling    .choices:nn =
     { None, AppDefault }
     {
       \pdf_version_compare:NnTF > {1.5}
         {
           \pdfdict_gput:nnx {Catalog / ViewerPreferences }
             { PrintScaling } { /#1 }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfprintscaling}
             {\pdf_version:}
         }
     }%
   ,pdfprintscaling /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } {PrintScaling }
     }
   ,pdfprintscaling / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfprintarea }
         { None, AppDefault }
         { \exp_not:n {#1} }
     }
   % pdfstartpage is special as it shares code with pdfstartview
   ,pdfstartpage .code:n =
     {
       \tl_gset:Nx \g__hyp_pdfstartpage_tl { #1 }
       \bool_if:nTF
         { \tl_if_empty_p:N \g__hyp_pdfstartpage_tl || \tl_if_empty_p:N \g__hyp_pdfstartview_tl }
         {
           \pdfdict_gremove:nn {Catalog} { OpenAction }
         }
         {
           \pdfdict_gput:nnx {Catalog} { OpenAction }
             {
               [\pdf_pageobject_ref:n {\g__hyp_pdfstartpage_tl}~/\g__hyp_pdfstartview_tl]
             }
         }
     }
   ,pdfstartpage .initial:n =1
   ,pdfstartview .code:n =
     {
       \tl_gset:Nx \g__hyp_pdfstartview_tl { #1 }
       \bool_if:nTF
         { \tl_if_empty_p:N \g__hyp_pdfstartpage_tl || \tl_if_empty_p:N \g__hyp_pdfstartview_tl }
         {
           \pdfdict_gremove:nn {Catalog} { OpenAction }
         }
         {
           \pdfdict_gput:nnx {Catalog} { OpenAction }
             {
               [\pdf_pageobject_ref:n {\g__hyp_pdfstartpage_tl}~/\g__hyp_pdfstartview_tl]
             }
         }
     }
   ,pdfstartview .initial:n = Fit
   ,pdftoolbar    .choice:
   ,pdftoolbar / true .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { HideToolbar }
     }
   ,pdftoolbar / false .code:n =
     {
       \pdfdict_gput:nnn {Catalog / ViewerPreferences }
         { HideToolbar } { true }
     }
   ,pdftoolbar / true .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { HideToolbar }
     }
   ,pdftoolbar    .default:n = true
   ,pdftoolbar / unknown .code:n =
     {
       \msg_warning:nnxx { hyp } { no-bool }
         { pdftoolbar }
         { \exp_not:n {#1} }
     }
   ,pdfviewarea    .choices:nn =
     { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
     {
       \pdf_version_compare:NnTF < {2.0}
         {
           \pdfdict_gput:nnn {Catalog / ViewerPreferences }
             { ViewArea } { /#1 }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfviewarea}
             {\pdf_version:}
         }
     }%
   ,pdfviewarea /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { ViewArea }
     }
   ,pdfviewarea / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfviewarea }
         { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
         { \exp_not:n {#1} }
     }
   ,pdfviewclip    .choices:nn =
     { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
     {
       \pdf_version_compare:NnTF < {2.0}
         {
           \pdfdict_gput:nnn {Catalog / ViewerPreferences }
             { ViewClip } { /#1 }
         }
         {
           \msg_warning:nnxx
             {hyp}
             {ignore-deprecated-or-unknown-option-in-pdf-version}
             {pdfviewclip}
             {\pdf_version:}
         }
     }%
   ,pdfviewclip /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { ViewClip }
     }
   ,pdfviewclip / unknown .code:n =
     {
       \msg_warning:nnxxx { hyp } { unknown-choice+empty }
         { pdfviewclip }
         { MediaBox, CropBox, BleedBox, TrimBox, ArtBox }
         { \exp_not:n {#1} }
     }
   ,pdfwindowui    .choice:
   ,pdfwindowui / true .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } { HideWindowUI }
     }
   ,pdfwindowui / false .code:n =
     {
       \pdfdict_gput:nnn {Catalog / ViewerPreferences }
          { HideWindowUI } { true }
     }
   ,pdfwindowui /  .code:n =
     {
       \pdfdict_gremove:nn {Catalog / ViewerPreferences } {HideWindowUI }
     }
   ,pdfwindowui / unknown .code:n =
     {
       \msg_warning:nnxx { hyp } { no-bool }
         { pdfwindowui }
         { \exp_not:n {#1} }
     }
   ,pdfwindowui    .default:n = true
 }

\keys_define:nn { hyp / setup }
  {
    ,pdfborder  .code:n =
      {
        \tl_set:Nn \@pdfborder {#1}
      }
    ,pdfborder .initial:n = {0~0~1},
    ,pdfborderstyle .code:n =
      {
        \tl_set:Nn \@pdfborderstyle {#1}
      }
    ,pdfborderstyle .initial:n = {},
    ,colorlinks .meta:n = {pdfborder={0~0~0},pdfborderstyle={}}
    ,ocgcolorlinks .meta:n = {pdfborder={0~0~0},pdfborderstyle={}}
  }

\hypupdateattribute

%"info" keys
% as hyperref resets some at begin document,
% they only work correctly if set later ...
% for now they use hex-encoding
% later we can add instruction to add to meta data here
\cs_new_protected:Npn \__hyp_setup_info_key:nn #1 #2
  {
    \keys_define:nn { hyp / setup }
      {
        pdf#1  .code:n =
          {
            \__hyp_text_pdfdef:nnN {##1}{ hex_print}\l__hyp_tmpa_tl
            \pdfdict_gput:nnx {Info}{#2}{\l__hyp_tmpa_tl}
          }
      }
    \keys_define:nn { hyp / info }
      {
        #2  .code:n =
          { 
            \__hyp_text_pdfdef:nnN {##1}{ hex_print}\l__hyp_tmpa_tl
            \pdfdict_gput:nnx {Info}{#2}{\l__hyp_tmpa_tl}
          }
        ,unknown .code:n =
         {
            \__hyp_text_pdfdef:nnN {##1}{ hex_print}\l__hyp_tmpa_tl
            \exp_args:Nnx
              \pdfdict_gput:nnx {Info}{\exp_args:No\pdftool_name:n{\l_keys_key_str}}{\l__hyp_tmpa_tl}
         }
      }
  }
\__hyp_setup_info_key:nn {author}   {Author}
\__hyp_setup_info_key:nn {title}    {Title}
\__hyp_setup_info_key:nn {producer} {Producer}
\__hyp_setup_info_key:nn {creator}  {Creator}
% ignored key: addtopdfcreator
\__hyp_setup_info_key:nn {creationdate}  {Creationdate}
\__hyp_setup_info_key:nn {moddate}  {ModDate}
\__hyp_setup_info_key:nn {subject}  {Subject}
\__hyp_setup_info_key:nn {keywords}  {Keywords}

%pdfinfo allows to set the key with keyval ...
\keys_define:nn { hyp / setup }
  {
    pdfinfo .code:n =
      {
        \keys_set:nn { hyp / info } { #1 }
      }
  }
%Trapped is a bit curious, it has an value "unknown", and one can't suppress it ...
\keys_define:nn { hyp / setup }
  {
    ,pdftrapped .code:n =
      {
        \exp_args:Nne
          \keys_set:nn { hyp / setup } { __pdftrapped = \str_uppercase:n { #1 } }
      }
    ,__pdftrapped  .choices:nn = {TRUE,FALSE,UNKNOWN}
       {
         \pdfdict_gput:nnx {Info}{Trapped}
           {/
             \str_uppercase:f { \str_head:n { #1 } }
             \str_lowercase:f { \str_tail:n { #1 } }
           }
       }
    ,__pdftrapped / unknown .code:n =
       {
         \msg_warning:nnxxx { hyp } { unknown-choice }
           { pdftrapped }
           { true~(case~insensitive), false~(case~insensitive), unknown~(case~insensitive) }
           { \exp_not:n {#1} }
       }
  }

\cs_set_protected:Npn \PDF@SetupDoc
  {
    %\bool_if:nF
%      {
%        \tl_if_empty_p:N \@pdfstartpage
%        ||
%        \tl_if_empty_p:N \@pdfstartview
%      }
%      {
%        \exp_args:Noo
%        \pdf_docview:nn {\@pdfstartpage} {\tl_tail:N\@pdfstartview}
%      }
}

\def\PDF@FinishDoc{}% dummy needed for hyperref ...


\AtEndPreamble{
  \pdf@ifdraftmode{}{
    %!!!!! this must be handled somehow
    \Hy@UseMaketitleInfos %get/set Title/Author from \title if pdfusetitle is true
    }
  %is this still needed?
  \Hy@DisableOption{pdfauthor}%
  \Hy@DisableOption{pdftitle}%
  \Hy@DisableOption{pdfsubject}%
  \Hy@DisableOption{pdfcreator}%
  \Hy@DisableOption{pdfcreationdate}%
  \Hy@DisableOption{pdfmoddate}%
  \Hy@DisableOption{pdfproducer}%
  \Hy@DisableOption{pdfkeywords}%
  \Hy@DisableOption{pdfinfo}%
}

\def\hyper@pagetransition{%
  \ifx\@pdfpagetransition\relax
  \else
   \pdfdict_gremove:nn { Page } {Trans}
   \tl_if_empty:NF \@pdfpagetransition
    {
     \pdfdict_gput:nnx { Page } {Trans}{<< /S /\@pdfpagetransition\space >>}
    }
  \fi
}

\def\hyper@pageduration{%
  \ifx\@pdfpageduration\relax
  \else
   \pdfdict_gremove:nn { Page } {Dur}
   \tl_if_empty:NF \@pdfpageduration
    {
     \pdfdict_gput:nnx {Page} {Dur}{\@pdfpageduration\space}
    }
  \fi
}
\ExplSyntaxOff


\pdf@ifdraftmode{}{%
  \g@addto@macro\Hy@EveryPageHook{%
    \hyper@pagetransition
    \hyper@pageduration
    %\hyper@pagehidden %UF is obsolete
  }%
}

%%% UF removed setpagesize code, should be done by kernel/graphicx
\ExplSyntaxOn
\def\Acrobatmenu#1#2{%
  \Hy@Acrobatmenu{#1}{#2}{%
    \mode_leave_vertical:
    \EdefEscapeName\Hy@temp@menu{#1}%
    \pdfannot_link:nnn { Named }
      {
        /A
          <<
            /S/Named
            /N/\Hy@temp@menu
            \Hy@href@nextactionraw
          >>
      }
      {
       \Hy@colorlink\@menucolor#2
       \Hy@xspace@end
       \Hy@endcolorlink
       \Hy@VerboseLinkStop
      }
  }
}
\ExplSyntaxOff
%%% UF removed old atbegshi fix
\ExplSyntaxOn
\def\MakeFieldObject#1#2
  {
    \pdf_xform_new:nnn { #2 }{} { #1 }
  }%

\prop_new:N   \g__hyp_AcroForm_CoFields_prop
\prop_new:N   \g__hyp_AcroForm_Fields_prop
\seq_new:N    \l__hyp_tmpa_seq
\let\HyField@afields\ltx@empty
\let\HyField@cofields\ltx@empty
%% UF test for old pdftex removed
%\let\HyField@AuxAddToFields\ltx@gobble
%\let\HyField@AuxAddToCoFields\ltx@gobbletwo
\def\HyField@AfterAuxOpen{\Hy@AtBeginDocument}%

% the value doesn't matter, but with a prop we avoid duplicates and it is
% clearly faster than removing them from a sequence
\def\HyField@AuxAddToFields#1
  {
    \prop_gput:Nnn \g__hyp_AcroForm_Fields_prop {#1}{F}
  }%

%fields with empty key get a value too -- lets hope that
%this give the expected behaviour
\def\HyField@AuxAddToCoFields #1 #2
  {
    \prop_gput:Nnn \g__hyp_AcroForm_CoFields_prop {a#1}{#2}
  }

\Hy@AtBeginDocument
  {
    \if@filesw
      \immediate\write\@mainaux{%
        \string\providecommand\string\HyField@AuxAddToFields[1]{}%
       }%
      \immediate\write\@mainaux{%
        \string\providecommand\string\HyField@AuxAddToCoFields[2]{}%
      }%
    \fi
    \let\HyField@AfterAuxOpen\@firstofone
  }%

\def\HyField@AddToFields
  {
    \exp_args:Nx\HyField@@AddToFields
      {
        %\pdf_link_last:
        \pdfannot_box_last:
      }
    \ifx\Fld@calculate@code\ltx@empty
    \else
      \begingroup
        \Hy@safe@activestrue
        \edef\Hy@temp{%
          \endgroup
          \if@filesw
            \write\@mainaux
             {
              \string\HyField@AuxAddToCoFields
               {
                \Fld@calculate@sortkey
               }
               {
                 %  \pdf_link_last:
                 \pdfannot_box_last:
               }
            }
          \fi
        }%
      \Hy@temp
    \fi
  }%

\def\HyField@@AddToFields#1{
  \HyField@AfterAuxOpen{%
    \if@filesw
      \write\@mainaux{%
        \string\HyField@AuxAddToFields{#1}%
        }%
      \fi
    }%
  }%

\ExplSyntaxOff
\ExplSyntaxOn
\tl_new:N  \l__hyp_CheckmarkYes_tl
\tl_set:Nn \l__hyp_CheckmarkYes_tl {  __hyp_xform_CheckMarkYes }
\tl_new:N  \l__hyp_CheckmarkOff_tl
\tl_set:Nn \l__hyp_CheckmarkOff_tl {  __hyp_xform_CheckMarkOff }

\def\@Form[#1]
  {
    \@ifundefined{textcolor}{\let\textcolor\@gobble}{}
    \kvsetkeys{Form}{#1}
    \pdf@ifdraftmode{}
      {
        \Hy@FormObjects
        \prop_map_inline:Nn \g__hyp_AcroForm_Fields_prop
          {
            \pdfdict_gput:nnx { Catalog / AcroForm } { Fields }{##1}
            %\pdfdict_show:n { Catalog / AcroForm }
            %\seq_show:c { g__pdf_/Catalog/AcroForm/Fields_seq} %!!!!!
          }
        \prop_if_empty:NF \g__hyp_AcroForm_CoFields_prop
          {
            \prop_map_inline:Nn \g__hyp_AcroForm_CoFields_prop
              {
                \seq_put_right:Nn \l__hyp_tmpa_seq {##1}
              }
            \seq_sort:Nn \l__hyp_tmpa_seq
              {
                \int_compare:nNnTF { \pdf@strcmp{##1}{##2} } > { 0 }
                %\int_compare:nNnTF { \__str_if_eq:nn {#1}{#2} } > { 0 }
                  { \sort_return_swapped: }
                  { \sort_return_same: }
              }
            \seq_map_inline:Nn \l__hyp_tmpa_seq
             {
                \pdfdict_gput:nnx { Catalog / AcroForm }
                  { CO }
                  {
                    \prop_item:Nn \g__hyp_AcroForm_CoFields_prop {##1}
                  }
             }
          }
       \pdfdict_gput:nnx {Catalog / AcroForm/DR/Font }
         {ZaDb} {\pdf_object_ref:n {l__hyp_font_zapfdingbats_obj} }
       \pdfdict_gput:nnx {Catalog / AcroForm/DR/Font }
         {Helv} {\pdf_object_ref:n {l__hyp_font_helvetica_obj} }
       \pdfdict_gput:nnx {Catalog /AcroForm}
         {DA}{(/Helv~10~Tf~0~g)}
       \legacy_if:nF { Hy@pdfa } %?????? Standards?
         {
           \legacy_if:nT { HyField@NeedAppearances }
             {
               \pdfdict_gput:nnx {Catalog / AcroForm }{NeedAppearances}{true}
             }
         }
       }
     \MakeFieldObject
       {
         \group_begin:
         \fontfamily{pzd}
         \fontencoding{U}
         \fontseries{m}
         \fontshape{n}
         \selectfont
         \char123
         \group_end:
       }
       {__hyp_xform_Ding}
    \MakeFieldObject
       {
         \group_begin:
         \fontfamily{pzd}
         \fontencoding{U}
         \fontseries{m}
         \fontshape{n}
         \selectfont
         \phantom{\char123}
         \group_end:
       }
       {__hyp_xform_DingOff}
     \MakeFieldObject
       {
         \group_begin:
         \fontfamily{pzd}
         \fontencoding{U}
         \fontseries{m}
         \fontshape{n}
         \selectfont
         \char51
         \group_end:
       }
       {__hyp_xform_CheckMarkYes}
     \MakeFieldObject
       {
        \group_begin:
         \fontfamily{pzd}
         \fontencoding{U}
         \fontseries{m}
         \fontshape{n}
         \selectfont
         \phantom{\char51} %perhaps xetex needs some small glyph ..
         \group_end:
       }
       {__hyp_xform_CheckMarkOff}
     \MakeFieldObject
       {
         \fbox{\textcolor{yellow}{\textsf{Submit}}} %color?
       }
       {__hyp_xform_Submit}
     \MakeFieldObject
       {
         \fbox{\textcolor{yellow}{\textsf{SubmitP}}} %color?
       }
       {__hyp_xform_SubmitP}
  }
\ExplSyntaxOff
\let\@endForm\ltx@empty
\let\HyAnn@AbsPageLabel\ltx@empty
\let\Fld@pageobjref\ltx@empty

\ExplSyntaxOn
\newcount\HyAnn@Count
\HyAnn@Count=\ltx@zero
\def\HyAnn@AbsPageLabel
  {
    \global\advance\HyAnn@Count by\ltx@one
    %\zref@labelbyprops{HyAnn@\the\HyAnn@Count}{abspage}%
    \zref@labelbylist {HyAnn@\the\HyAnn@Count} {l3pdf}
    \zref@refused{HyAnn@\the\HyAnn@Count}%
  }%
\def\Fld@pageobjref
  {
    \zref@ifrefundefined{HyAnn@\the\HyAnn@Count}
      {}
      {
        \zref@ifrefcontainsprop{HyAnn@\the\HyAnn@Count}{pdf@abspage}
          {
            /P~\pdf_pageobject_ref:n
                 {
                   \zref@extractdefault{HyAnn@\the\HyAnn@Count}{pdf@abspage}{1} %
                 }
          }
          {}
       }
  }

\ExplSyntaxOff
\ExplSyntaxOn
%% check if the attr should be set through
%% hooks.
%% check if options are missing.
\def\@TextField[#1]#2{% parameters, label
  \def\Fld@name{#2}%
  \let\Fld@default\ltx@empty
  \let\Fld@value\@empty
  \def\Fld@width{\DefaultWidthofText}%
  \def\Fld@height{%
    \ifFld@multiline
      \DefaultHeightofTextMultiline
    \else
      \DefaultHeightofText
    \fi
  }%
  \begingroup
    \expandafter\HyField@SetKeys\expandafter{%
      \DefaultOptionsofText,#1%
    }%
    \PDFForm@Name
    \HyField@FlagsText
    \ifFld@hidden\def\Fld@width{1sp}\fi
    \ifx\Fld@value\@empty\def\Fld@value{\Fld@default}\fi
    \LayoutTextField{#2}{%
      \leavevmode
      \HyAnn@AbsPageLabel
      \Hy@escapeform\PDFForm@Text
      \pdfannot_box:nnnn
          {\Fld@width}
          {\Fld@height}
          {0pt} %is this correct?
          {\PDFForm@Text}
      \MakeTextField{\Fld@width}{\Fld@height}
      \HyField@AddToFields
    }%
  \endgroup
}
\providecommand\@curropt{}
\def\@ChoiceMenu[#1]#2#3{% parameters, label, choices
  \def\Fld@name{#2}
  \let\Fld@default\relax
  \let\Fld@value\relax
  \def\Fld@width{\DefaultWidthofChoiceMenu}
  \def\Fld@height{\DefaultHeightofChoiceMenu}
  \begingroup
    \Fld@menulength=0 %
    \@tempdima\z@
    \clist_map_variable:nNn { #3 } \@curropt
    %\@for\@curropt:=#3\do
      {%
        \expandafter\Fld@checkequals\@curropt==\\%
        \Hy@StepCount\Fld@menulength
        \settowidth{\@tempdimb}{\@currDisplay}%
        \ifdim\@tempdimb>\@tempdima\@tempdima\@tempdimb\fi
      }%
    \advance\@tempdima by~15\p@
    \begingroup
      \HyField@SetKeys{#1}
    \edef\x{\endgroup
      \noexpand\expandafter
      \noexpand\HyField@SetKeys
      \noexpand\expandafter{%
        \expandafter\noexpand\csname DefaultOptionsof%
          \ifFld@radio
            Radio%
          \else
            \ifFld@combo
              \ifFld@popdown
                PopdownBox%
              \else
                ComboBox%
              \fi
            \else
              ListBox%
            \fi
          \fi
        \endcsname
      }%
    }\x
    \HyField@SetKeys{#1}%
    \PDFForm@Name
    \ifFld@hidden\def\Fld@width{1sp}\fi
    \ifx\Fld@value\relax
      \let\Fld@value\Fld@default
    \fi
    \LayoutChoiceField{#2}{%
      \ifFld@radio
        \HyField@FlagsRadioButton
        \@@Radio{#3}%
      \else
        \begingroup
          \HyField@FlagsChoice
          \ifdim\Fld@width<\@tempdima
            \ifdim\@tempdima<1cm\@tempdima1cm\fi
            \edef\Fld@width{\the\@tempdima}%
          \fi
          \ifFld@combo
          \else
            \@tempdima=\the\Fld@menulength\Fld@charsize
            \advance\@tempdima by~\Fld@borderwidth bp %
            \advance\@tempdima by~\Fld@borderwidth bp %
            \edef\Fld@height{\the\@tempdima}%
          \fi
          \@@Listbox{#3}%
        \endgroup
      \fi
    }%
  \endgroup
}
\tl_new:N  \l__hyp_RadioYes_tl
\tl_set:Nn \l__hyp_RadioYes_tl { __hyp_xform_Ding }
\def\@@Radio#1{%
  \Fld@listcount=0~%
  %\show\Fld@default
  \EdefEscapeName\Fld@default{\Fld@default}%
  \clist_map_variable:nNn { #1 } \@curropt
  %\@for\@curropt:=#1\do
   {%
    \expandafter\Fld@checkequals\@curropt==\\%
    \EdefEscapeName\@currValue{\@currValue}%
    \Hy@StepCount\Fld@listcount
    \@currDisplay\space
    \leavevmode
    \HyAnn@AbsPageLabel
    \Hy@escapeform\PDFForm@Radio
    \pdfannot_box:nnnn
      {\Fld@width}
      {\Fld@height}
      {0pt} %is this correct?
      {
        \PDFForm@Radio
        /AP
         <<
         /N
          <<
          /\@currValue\c_space_tl \pdf_xform_ref:o {__hyp_xform_Ding}
          %/Off \c_space_tl \pdf_xform_ref:n {__hyp_xform_DingOff} %hm
          >>
         >>
      }
      {\fbox{  \MakeRadioField{\Fld@width}{\Fld@height}} }
     \int_compare:nNnT { \Fld@listcount} = { 1 }
      { \HyField@AddToFields }
    \c_space_tl % deliberate space between radio buttons
                % to do: --> should be configurable
  }%
}

\newcount\Fld@listcount
\def\@@Listbox#1
 {
  \HyField@PDFChoices{#1}
  \mode_leave_vertical:
  \HyAnn@AbsPageLabel
  \Hy@escapeform\PDFForm@List
  \pdf_link_user:nnn
       {widget} %perhaps we need more types??
       {\PDFForm@List}
       {\MakeChoiceField{\Fld@width}{\Fld@height}}
  \HyField@AddToFields
 }


\def\@PushButton[#1]#2{% parameters, label
  \def\Fld@name{#2}%
  \group_begin:
    \exp_args:No\HyField@SetKeys
     {
      \DefaultOptionsofPushButton,#1
     }
    \PDFForm@Name
    \bool_if:NTF \l__hyp_pdfa_bool
     {
      \msg_error:nn { hyp }{ pdfa-no-push-button }
       \LayoutPushButtonField
        {
         \mode_leave_vertical:
         \MakeButtonField{#2}
        }
     }
     {
      \HyField@FlagsPushButton
      \legacy_if:nT {Fld@hidden}
        {
          \def\Fld@width{1sp}
        }
      \LayoutPushButtonField
       {
        \mode_leave_vertical:
        \HyAnn@AbsPageLabel
        \Hy@escapeform\PDFForm@Push
        \hbox_set:Nn \l_tmpa_box { \MakeButtonField {#2}}
        \pdfannot_box:nnnn
          {\box_wd:N\l_tmpa_box}
          {\box_ht:N\l_tmpa_box}
          {\box_dp:N\l_tmpa_box} %is this correct?
          {\PDFForm@Push}
         {\box_use:N\l_tmpa_box}
        \HyField@AddToFields
       }
      }
  \group_end:
}

\def\@Submit[#1]#2
 {
   \def\Fld@width {\DefaultWidthofSubmit}
   \def\Fld@height{\DefaultHeightofSubmit}
   \group_begin:
     \exp_args:No\HyField@SetKeys
       {
         \DefaultOptionsofSubmit,#1
       }
   \HyField@FlagsPushButton
   \HyField@FlagsSubmit
   \legacy_if:nT { Fld@hidden }
     {
       \def\Fld@width{1sp}
     }
    \mode_leave_vertical:
    \HyAnn@AbsPageLabel
    \Hy@escapeform\PDFForm@Submit
    \hbox_set:Nn \l_tmpa_box { \MakeButtonField {#2}}
    \pdfannot_box:nnnn
      {\box_wd:N\l_tmpa_box}
      {\box_ht:N\l_tmpa_box}
      {\box_dp:N\l_tmpa_box} %is this correct?
      {
        \PDFForm@Submit
        /AP<<
          /N~\pdf_xform_ref:n {__hyp_xform_Submit}~
          /D~\pdf_xform_ref:n {__hyp_xform_SubmitP}
         >>
       }
      \HyField@AddToFields
      \box_use:N\l_tmpa_box

    \group_end:
 }

\def\@Reset[#1]#2
 {
   \def\Fld@width {\DefaultWidthofReset}
   \def\Fld@height{\DefaultHeightofReset}
   \group_begin:
     \exp_args:No\HyField@SetKeys
       {
         \DefaultOptionsofReset,#1
       }
     \mode_leave_vertical:
     \bool_if:NTF \l__hyp_pdfa_bool
       {
         \msg_error:nn { hyp }{ pdfa-no-reset-button }
         \MakeButtonField{#2}
       }
       {
         \HyField@FlagsPushButton
         \legacy_if:nT { Fld@hidden }
           { \def\Fld@width{1sp} }
         \HyAnn@AbsPageLabel
         \Hy@escapeform\PDFForm@Reset
         \hbox_set:Nn \l_tmpa_box { \MakeButtonField {#2}}
         \pdfannot_box:nnnn
           {\box_wd:N\l_tmpa_box}
           {\box_ht:N\l_tmpa_box}
           {\box_dp:N\l_tmpa_box} %is this correct?
           { \PDFForm@Reset }
         \HyField@AddToFields
         \box_use:N \l_tmpa_box
       }
    \group_end:
  }

\def\@CheckBox[#1]#2
  {% parameters, label
    \def\Fld@name{#2}
    \def\Fld@default{0}
    \group_begin:
      \def\Fld@width {\DefaultWidthofCheckBox}
      \def\Fld@height{\DefaultHeightofCheckBox}
      \exp_args:No\HyField@SetKeys
        {
          \DefaultOptionsofCheckBox,#1
        }
      \PDFForm@Name
      \HyField@FlagsCheckBox
      \legacy_if:nT { Fld@hidden }
        {
          \def\Fld@width{1sp}
        }
      \LayoutCheckField{#2}
        {
          \mode_leave_vertical:
          \HyAnn@AbsPageLabel
          \Hy@escapeform\PDFForm@Check
          \pdfannot_box:nnnn
            {\Fld@width}
            {\Fld@height}
            {0pt} %is this correct?
            {\PDFForm@Check}
          \HyField@AddToFields %check if this works with xelatex ...
        }
    \group_end:
  }
\ExplSyntaxOff

%hm. Should a luatex driver use type1 fonts in fields????
\ExplSyntaxOn
\def\Hy@FormObjects
  {
    \pdf_object_new:nn   {l__hyp_encoding_pdfdoc_obj }   { dict }
    \pdf_object_new:nn   {l__hyp_font_zapfdingbats_obj } { dict }
    \pdf_object_new:nn   {l__hyp_font_helvetica_obj }    { dict }
    \pdf_object_write:nx {l__hyp_encoding_pdfdoc_obj }
      {
        /Type/Encoding
        /Differences[
          24/breve/caron/circumflex/dotaccent/hungarumlaut/ogonek
          /ring/tilde
          \c_space_tl
          39/quotesingle
          \c_space_tl
          96/grave %
          \iow_newline:
          128/bullet/dagger/daggerdbl/ellipsis/emdash/endash/florin
          /fraction/guilsinglleft/guilsinglright/minus/perthousand
          /quotedblbase/quotedblleft/quotedblright/quoteleft
          /quoteright/quotesinglbase/trademark/fi/fl/Lslash/OE
          /Scaron/Ydieresis/Zcaron/dotlessi/lslash/oe/scaron/zcaron
          \iow_newline:
          164/currency
          \c_space_tl
          166/brokenbar
          \c_space_tl
          168/dieresis/copyright/ordfeminine
          \c_space_tl
          172/logicalnot/.notdef/registered/macron/degree/plusminus
          /twosuperior/threesuperior/acute/mu
          \c_space_tl
          183/periodcentered/cedilla/onesuperior/ordmasculine
          \c_space_tl
          188/onequarter/onehalf/threequarters
          \iow_newline:
          192/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
          /Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave
          /Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute
          /Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
          /Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
          /agrave/aacute/acircumflex/atilde/adieresis/aring/ae
          /ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
          /iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
          /ocircumflex/otilde/odieresis/divide/oslash/ugrave
          /uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
         ]
      }
    \pdf_object_write:nn {l__hyp_font_zapfdingbats_obj }
      {
        /Type/Font
        /Subtype/Type1
        /Name/ZaDb
        /BaseFont/ZapfDingbats
      }
    \pdf_object_write:nx {l__hyp_font_helvetica_obj }
      {
        /Type/Font
        /Subtype/Type1
        /Name/Helv
        /BaseFont/Helvetica
        /Encoding~\pdf_object_ref:n { l__hyp_encoding_pdfdoc_obj }
      }
  \global\let\Hy@FormObjects\relax
  }
\ExplSyntaxOff
\providecommand*{\Fld@pageobjref}{}
\ifcsname pdf@escapestring\endcsname
  \def\Hy@escapeform#1{%
    \ifHy@pdfescapeform
      \let\Hy@escapestring\pdfescapestring
    \else
      \let\Hy@escapestring\@firstofone
    \fi
  }%
  \Hy@escapeform{}%
\else
  \let\Hy@escapestring\@firstofone
  \def\Hy@escapeform#1{%
    \ifHy@pdfescapeform
      \def\Hy@escapestring##1{%
        \noexpand\Hy@escapestring{\noexpand##1}%
      }%
      \edef\Hy@temp{#1}%
      \expandafter\Hy@@escapeform\Hy@temp\Hy@escapestring{}\@nil
      \def\Hy@escapestring##1{%
        \@ifundefined{Hy@esc@\string##1}{%
          ##1%
          \ThisShouldNotHappen
        }{%
          \csname Hy@esc@\string##1\endcsname
        }%
      }%
    \else
      \let\Hy@escapestring\@firstofone
    \fi
  }%
  \def\Hy@@escapeform#1\Hy@escapestring#2#3\@nil{%
    \ifx\\#3\\%
    \else
      \expandafter
      \Hy@pstringdef\csname Hy@esc@\string#2\endcsname{#2}%
      \ltx@ReturnAfterFi{%
        \Hy@@escapeform#3\@nil
      }%
    \fi
  }%
\fi
\def\PDFForm@Name{%
  \PDFForm@@Name\Fld@name
  \ifx\Fld@altname\relax
  \else
    \PDFForm@@Name\Fld@altname
  \fi
  \ifx\Fld@mappingname\relax
  \else
    \PDFForm@@Name\Fld@mappingname
  \fi
}
\def\PDFForm@@Name#1{%
  \begingroup
    \ifnum\Hy@pdfversion<5 % implementation note 117, PDF spec 1.7
      \ifHy@unicode
        \Hy@unicodefalse
      \fi
    \fi
    \pdfstringdef\Hy@gtemp#1%
  \endgroup
  \let#1\Hy@gtemp
}
\def\Fld@@additionalactions{%
  \ifx\Fld@keystroke@code\@empty
  \else
    /K<</S/JavaScript/JS(\Hy@escapestring{\Fld@keystroke@code})>>%
  \fi
  \ifx\Fld@format@code\@empty
  \else
    /F<</S/JavaScript/JS(\Hy@escapestring{\Fld@format@code})>>%
  \fi
  \ifx\Fld@validate@code\@empty
  \else
    /V<</S/JavaScript/JS(\Hy@escapestring{\Fld@validate@code})>>%
  \fi
  \ifx\Fld@calculate@code\@empty
  \else
    /C<</S/JavaScript/JS(\Hy@escapestring{\Fld@calculate@code})>>%
  \fi
  \ifx\Fld@onfocus@code\@empty
  \else
    /Fo<</S/JavaScript/JS(\Hy@escapestring{\Fld@onfocus@code})>>%
  \fi
  \ifx\Fld@onblur@code\@empty
  \else
    /Bl<</S/JavaScript/JS(\Hy@escapestring{\Fld@onblur@code})>>%
  \fi
  \ifx\Fld@onmousedown@code\@empty
  \else
    /D<</S/JavaScript/JS(\Hy@escapestring{\Fld@onmousedown@code})>>%
  \fi
  \ifx\Fld@onmouseup@code\@empty
  \else
    /U<</S/JavaScript/JS(\Hy@escapestring{\Fld@onmouseup@code})>>%
  \fi
  \ifx\Fld@onenter@code\@empty
  \else
    /E<</S/JavaScript/JS(\Hy@escapestring{\Fld@onenter@code})>>%
  \fi
  \ifx\Fld@onexit@code\@empty
  \else
    /X<</S/JavaScript/JS(\Hy@escapestring{\Fld@onexit@code})>>%
  \fi
}
\def\Fld@additionalactions{%
  \if-\Fld@@additionalactions-%
  \else
    \ifHy@pdfa
    \else
      /AA<<\Fld@@additionalactions>>%
    \fi
  \fi
}
\def\Fld@annotnames{%
  /T(\Fld@name)%
  \ifx\Fld@altname\relax
  \else
    /TU(\Fld@altname)%
  \fi
  \ifx\Fld@mappingname\relax
  \else
    /TM(\Fld@mappingname)%
  \fi
}
\ExplSyntaxOn
\def\PDFForm@Check
  {
    /Subtype/Widget
    ~\Fld@annotflags
    ~\Fld@pageobjref
    ~\Fld@annotnames
    /FT/Btn
   \Fld@flags
   /Q~\Fld@align
   /BS<</W~\Fld@borderwidth /S/\Fld@borderstyle>>
   /AP
     <<
      /N
        <<
          /Yes~\pdf_xform_ref:o{\l__hyp_CheckmarkYes_tl}
          /Off~\pdf_xform_ref:o{\l__hyp_CheckmarkOff_tl}
        >>
    >>
  /MK<<
    \int_compare:nNnF {\Fld@rotation}={0}
      {
        /R~\Fld@rotation
      }
    \tl_if_empty:NF\Fld@bordercolor
      {
        /BC[\Fld@bordercolor]
      }
    \tl_if_empty:NF\Fld@bcolor
      {
        /BG[\Fld@bcolor]
      }
    /CA(\Hy@escapestring{\Fld@cbsymbol})%
  >>
  /DA
    (
      /ZaDb~\strip@pt\Fld@charsize\c_space_tl Tf
      \tl_if_empty:NF \Fld@color
        {
          \c_space_tl \Fld@color
        }
    )
  /H/P
  \legacy_if:nTF {Fld@checked}
    {
      /V/Yes /AS/Yes
    }
    {
      /V/Off /AS/Off
    }
  \Fld@additionalactions
}
\ExplSyntaxOff
\ExplSyntaxOn
\legacy_if:nF { Hy@pdfa }
  {
   \def\PDFForm@Push
     {
       /Subtype/Widget
       ~\Fld@annotflags
       ~\Fld@pageobjref
       ~\Fld@annotnames
       /FT/Btn
       ~\Fld@flags
       /H/P
       /BS<</W~\Fld@borderwidth/S/\Fld@borderstyle>>
       \bool_if:nT
         {
           !\int_compare_p:nNn {\Fld@rotation} = {0}
          ||
           \tl_if_exist_p:N \Fld@bordercolor
         }
         {
           /MK
             <<
               \int_compare:nNnF {\Fld@rotation} = {0}
                 {
                   /R~\Fld@rotation
                 }
               \tl_if_exist:NT \Fld@bordercolor
                 {
                   /BC[\Fld@bordercolor]
                 }
             >>
          }
       /A<</S/JavaScript/JS(\Hy@escapestring{\Fld@onclick@code})>>
       \Fld@additionalactions
     }
  }
\ExplSyntaxOff
\def\PDFForm@List{%
  /Subtype/Widget%
  \Fld@annotflags
  \Fld@pageobjref
  \Fld@annotnames
  /FT/Ch%
  \Fld@flags
  /Q \Fld@align
  /BS<</W \Fld@borderwidth/S/\Fld@borderstyle>>%
  \ifcase0\ifnum\Fld@rotation=\z@   \else 1\fi
          \ifx\Fld@bordercolor\relax\else 1\fi
          \ifx\fld@bcolor\relax     \else 1\fi
          \space
  \else
    /MK<<%
      \ifnum\Fld@rotation=\z@
      \else
        /R \Fld@rotation
      \fi
      \ifx\Fld@bordercolor\relax
      \else
        /BC[\Fld@bordercolor]%
      \fi
      \ifx\Fld@bcolor\relax
      \else
        /BG[\Fld@bcolor]%
      \fi
    >>%
  \fi
  /DA(/Helv \strip@pt\Fld@charsize\space Tf%
      \ifx\Fld@color\@empty\else\space\Fld@color\fi)%
  \Fld@choices
  \Fld@additionalactions
}
\ExplSyntaxOn
\def\PDFForm@Radio
  {
    /Subtype/Widget
    ~\Fld@annotflags
    ~\Fld@pageobjref
    ~\Fld@annotnames
    /FT/Btn
   \Fld@flags
   /H/P
   /BS<</W~\Fld@borderwidth/S/\Fld@borderstyle>>
   /MK<<
    \ifnum\Fld@rotation=\z@
    \else
      /R~\Fld@rotation
    \fi
    \ifx\Fld@bordercolor\relax
    \else
      /BC[\Fld@bordercolor]%
    \fi
    \ifx\Fld@bcolor\relax
    \else
      /BG[\Fld@bcolor]%
    \fi
     /CA(\Hy@escapestring{\Fld@radiosymbol})%
    >>
    /DA(/ZaDb~\strip@pt\Fld@charsize\space Tf%
      \ifx\Fld@color\@empty\else\space\Fld@color\fi)%
   \ifx\Fld@default\@empty
    /V/Off%
    /DV/Off%
   \else
    /V/\Fld@default
    /DV/\Fld@default
   \fi
   \Fld@additionalactions
 }
\ExplSyntaxOff
\ExplSyntaxOn
% Does an appeareance dict make sense here?
\def\PDFForm@Text
  {
    /Subtype/Widget
    ~\Fld@annotflags
    ~\Fld@pageobjref
    ~\Fld@annotnames
    /FT/Tx
    ~\Fld@flags
    /Q~\Fld@align
    /BS<</W~\Fld@borderwidth\c_space_tl /S /\Fld@borderstyle>>
   \bool_if:nT
     {
        !\int_compare_p:nNn {\Fld@rotation} = {0}
       ||
        \tl_if_exist_p:N \Fld@bordercolor
       ||
        \tl_if_exist_p:N \Fld@bcolor
     }
     {
       /MK
         <<
           \int_compare:nNnF {\Fld@rotation} = {0}
             {
               /R~\Fld@rotation
             }
           \tl_if_exist:NT \Fld@bordercolor
             {
               /BC[\Fld@bordercolor]
             }
           \tl_if_exist:NT \Fld@bcolor
             {
               /BG[\Fld@bcolor]
             }
        >>
     }
   /DA
     (
       /Helv~\strip@pt\Fld@charsize\c_space_tl Tf
       \tl_if_empty:NF {\c_space_tl\Fld@color}
     )
   /DV(\Hy@escapestring{\Fld@default})
   /V(\Hy@escapestring{\Fld@value})
   ~\Fld@additionalactions
   \int_compare:nNnT { \Fld@maxlen}>{0}
     {
       /MaxLen~\Fld@maxlen
     }
  }
\ExplSyntaxOff

\def\PDFForm@Submit{%
  /Subtype/Widget%
  \Fld@annotflags
  \Fld@pageobjref
  \Fld@annotnames
  /FT/Btn%
  \Fld@flags
  /H/P%
  /BS<</W \Fld@borderwidth/S/\Fld@borderstyle>>%
  \ifcase0\ifnum\Fld@rotation=\z@   \else 1\fi
          \ifx\Fld@bordercolor\relax\else 1\fi
          \space
  \else
    /MK<<%
      \ifnum\Fld@rotation=\z@
      \else
        /R \Fld@rotation
      \fi
      \ifx\Fld@bordercolor\relax
      \else
        /BC[\Fld@bordercolor]%
      \fi
    >>%
  \fi
  /A<<%
    /S/SubmitForm%
    /F<<%
      /FS/URL%
      /F(\Hy@escapestring{\Form@action})%
    >>%
    \Fld@submitflags
  >>%
  \Fld@additionalactions
}
\ifHy@pdfa
\else
  \def\PDFForm@Reset{%
    /Subtype/Widget%
    \Fld@annotflags
    \Fld@pageobjref
    \Fld@annotnames
    /FT/Btn%
    \Fld@flags
    /H/P%
    /DA(/Helv \strip@pt\Fld@charsize\space Tf 0 0 1 rg)%
    \ifcase0\ifnum\Fld@rotation=\z@   \else 1\fi
            \ifx\Fld@bordercolor\relax\else 1\fi
            \space
    \else
      /MK<<%
        \ifnum\Fld@rotation=\z@
        \else
          /R \Fld@rotation
        \fi
        \ifx\Fld@bordercolor\relax
        \else
          /BC[\Fld@bordercolor]%
        \fi
      >>%
    \fi
    /BS<</W \Fld@borderwidth/S/\Fld@borderstyle>>%
    /A<</S/ResetForm>>%
    \Fld@additionalactions
  }%
\fi

% UF: removed Hy@writebookmark
%     \Hy@currentbookmarklevel{0}
%     \Hy@numberline
%     \@@writetorep
%     counter{bookmark@seq@number}
% removed \HyPsd@SanitizeForOutFile, not needed
% removed \currentpdfbookmark, defined by bookmark,
% should use \newcommand there
% removed \subpdfbookmark, defined by bookmark,
% should use \newcommand there
% removed \belowpdfbookmark, defined by bookmark,
% should use \newcommand there
% removed \pdfbookmark, defined by bookmark,
% \BOOKMARK
% \@BOOKMARK
%% \RequirePackage{rerunfilecheck}[2009/12/10]
%% removed \Hy@OutlineRerunCheck, unneeded with bookmark
%% removed \ReadBookmarks / unneeded with bookmark.
%% removed \Hy@OutlineName
%% removed \check@bm@number
%% removed \calc@bm@number

\ifHy@implicit
\else
  \expandafter\endinput
\fi
\newlength\Hy@SectionHShift
\def\Hy@SectionAnchorHref#1{%
  \ifx\protect\@typeset@protect
    \Hy@@SectionAnchor{#1}%
  \fi
}
\DeclareRobustCommand*{\Hy@@SectionAnchor}[1]{%
  \leavevmode
  \hbox to 0pt{%
    \kern-\Hy@SectionHShift
    \Hy@raisedlink{%
      \hyper@anchorstart{#1}\hyper@anchorend
    }%
    \hss
  }%
}
\let\H@old@ssect\@ssect
\def\@ssect#1#2#3#4#5{%
  \Hy@MakeCurrentHrefAuto{section*}%
  \setlength{\Hy@SectionHShift}{#1}%
  \begingroup
    \toks@{\H@old@ssect{#1}{#2}{#3}{#4}}%
    \toks\tw@\expandafter{%
      \expandafter\Hy@SectionAnchorHref\expandafter{\@currentHref}%
      #5%
    }%
  \edef\x{\endgroup
    \the\toks@{\the\toks\tw@}%
  }\x
}
\let\H@old@schapter\@schapter
\def\@schapter#1{%
  \begingroup
    \let\@mkboth\@gobbletwo
    \Hy@MakeCurrentHrefAuto{\Hy@chapapp*}%
    \Hy@raisedlink{%
      \hyper@anchorstart{\@currentHref}\hyper@anchorend
    }%
  \endgroup
  \H@old@schapter{#1}%
}
\ltx@IfUndefined{@chapter}{}{%
  \let\Hy@org@chapter\@chapter
  \def\@chapter{%
    \def\Hy@next{%
      \Hy@MakeCurrentHrefAuto{\Hy@chapapp*}%
      \Hy@raisedlink{%
        \hyper@anchorstart{\@currentHref}\hyper@anchorend
      }%
    }%
    \ifnum\c@secnumdepth>\m@ne
      \ltx@IfUndefined{if@mainmatter}%
      \iftrue{\csname if@mainmatter\endcsname}%
        \let\Hy@next\relax
      \fi
    \fi
    \Hy@next
    \Hy@org@chapter
  }%
}
\let\H@old@part\@part
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname chapter\endcsname\relax
  \let\Hy@secnum@part\z@
\else
  \let\Hy@secnum@part\m@ne
\fi
\def\@part{%
  \ifnum\Hy@secnum@part>\c@secnumdepth
    \phantomsection
  \fi
  \H@old@part
}
\let\H@old@spart\@spart
\def\@spart#1{%
  \Hy@MakeCurrentHrefAuto{part*}%
  \Hy@raisedlink{%
    \hyper@anchorstart{\@currentHref}\hyper@anchorend
  }%
  \H@old@spart{#1}%
}
\let\H@old@sect\@sect
\def\@sect#1#2#3#4#5#6[#7]#8{%
  \ifnum #2>\c@secnumdepth
    \expandafter\@firstoftwo
  \else
    \expandafter\@secondoftwo
  \fi
  {%
    \Hy@MakeCurrentHrefAuto{section*}%
    \setlength{\Hy@SectionHShift}{#3}%
    \begingroup
      \toks@{\H@old@sect{#1}{#2}{#3}{#4}{#5}{#6}[{#7}]}%
      \toks\tw@\expandafter{%
        \expandafter\Hy@SectionAnchorHref\expandafter{\@currentHref}%
        #8%
      }%
    \edef\x{\endgroup
      \the\toks@{\the\toks\tw@}%
    }\x
  }{%
    \H@old@sect{#1}{#2}{#3}{#4}{#5}{#6}[{#7}]{#8}%
  }%
}
\expandafter\def\csname Parent-4\endcsname{}
\expandafter\def\csname Parent-3\endcsname{}
\expandafter\def\csname Parent-2\endcsname{}
\expandafter\def\csname Parent-1\endcsname{}
\expandafter\def\csname Parent0\endcsname{}
\expandafter\def\csname Parent1\endcsname{}
\expandafter\def\csname Parent2\endcsname{}
\expandafter\def\csname Parent3\endcsname{}
\expandafter\def\csname Parent4\endcsname{}

%%
%% End of file `hluatex.def'.
\endinput
%%
%% End of file `hluatex.def'.
