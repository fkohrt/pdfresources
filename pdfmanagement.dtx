% \iffalse meta-comment
%
%% File: pdfmanagement.dtx
%
% Copyright (C) 2019-2020 The LaTeX3 Project
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
% This file is part of the "pdfmanagement bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/latex3/pdfresources
%
% for those people who are interested.
%
%<*driver>
\documentclass{l3doc}
\usepackage{tabularx,array,booktabs}
\newcommand\potentialclash{\noindent\llap{\dbend\ }}
\raggedbottom
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%
% \title{\pkg{pdfmanagement}}
%
% \author{^^A
%  The \LaTeX3 Project\thanks
%    {^^A
%      E-mail:
%        \href{mailto:latex-team@latex-project.org}
%          {latex-team@latex-project.org}^^A
%    }^^A
% }
%
% \date{Released 2020-XX-XX}
%
% \maketitle
% \begin{documentation}
% \section{Introduction}
% The \LaTeX{} format currently contains nearly no code specific to the now quite
% central output format, PDF. It also offers nearly no interfaces to important PDF related
% primitive commands for package writers.
%
% Important tasks like supporting PDF standards,
% creating links, adding special colors, managing the content of
% central PDF-directories are delegated to external packages which have to recourse to
% the primitive low-level commands in their code.
%
% This is problematic for two reasons:
% \begin{itemize}
%\item At first using primitives directly can lead to clashes and duplicate
% settings with conflicting values---nothing prevent packages to add for example
% the \texttt{/Title} twice to the Info dictionary, the \texttt{/Lang} entry
% twice to the Catalog, or to add two \texttt{/ExtGState}
% resources to a page. The PDF normally doesn't break in such
% cases---the format is quite robust---but it will ignore one of the duplicates and
% the output can be wrong.
%
% \item At second the primitives differ between the various engines and backends with
% which \LaTeX{} is used. To support the engines and backend
% packages have to write and maintain
% \enquote{driver} files which they did to a varying degree. This makes it
% difficult for users to assess if a package will work with their work-flow.
% \end{itemize}
%
% Despite the potential problems, until now the number of conflicts were
% small and could be resolved in an ad-hoc fashion. But the future plans for
% \LaTeX{} regarding support for tagged PDF and
% PDF standard mean that much more PDF specific code will have to be
% written by the kernel directly and this can not be done without proper,
% well-defined and well-behaving interfaces.
%
% Some first step for better support of PDF related commands have been already done
% with the \pkg{l3pdf} package. It offers backend independent commands to create
% PDF objects and destination, to set the compress level and the PDF version.
%
% The package \pkg{pdfmanagement} extends this to more PDF related areas and provide
% interfaces to them in a backend independent way.
%
% The package has two main objectives connected with the problems identified above:
% \begin{itemize}
% \item For commands with \enquote{clash potential} it implements commands to
% replace the primitives which resolve potential conflicts.
%
% \item It implements command for a variety of PDF related tasks
% which support a well-defined set of backends.
% \end{itemize}
%
% \section{\enquote{Change Strategy}: The integration into \LaTeX\label{sec:change}}
%
% The central module of this package, \pkg{l3pdfmanagement}, defines an interface
% for the (pdf\TeX) primitives \cs{pdfcatalog}, \cs{pdfinfo},
% \cs{pdfpagesattr}, \cs{pdfpagesattr} and \cs{pdfpageresources} and
% the analog commands from the other engines and backends.
%
% All these commands have a \enquote{clash potential}, this means that the new
% interface is incompatible with a parallel use of the primitive commands
% which it targets to replace and supersede.
% This doesn't affect many packages, but the list of package using such primitives
% contains central and important packages like \pkg{hyperref}, \pkg{tikz},
% \pkg{pdfx} and more.
%
% So while the goal is to integrate the code into the \LaTeX{} format directly,
% this can not be done directly without conflicts with existing documents and packages.
%
% As an intermediary step this package has been created which load the code
% manually. With it package authors can test the new code, give feedback
% and adapt their packages.
%
% Loading the package will only load the modules,
% to activate the core pdf management a trigger command has to be used.
% The loading and activation has to be done
% \emph{before} the \cs{documentclass} command.
%
%
% We hope that this setup will allow packages writers and authors to test the
% pdfmanagement and adapt packages and document safely.
%
%
% \section{Backend support}
% The supported backends are pdflatex, lualatex, (x)dvipdfmx (latex, xelatex,
% dvilualatex (in texlive 2021))
% and dvips with ps2pdf (not completely yet). dvips with distiller could work too
% but is untested.
%
% That the interfaces and commands are backend independent doesn't mean
% that the results and even the compilation behavior is identical.
% The backends are too different to allow this.
% Some backends expand arguments e.g. in a \cs{special} while other don't.
% Some backends can insert a resource at the first compilation, while another uses
% the aux-file and a label and so needs at least two compilation runs.
% Some backends manage some of the resources through side-effects,
% some manage them automatically.
% All this mean that package writers will still have to keep an eye on
% backend requirements and run tests for all variants. Also backend specific code
% will still be needed in some cases.
%
% \section{Use}\label{sec:use}
% The package should be loaded before \cs{documentclass}. To activate
% the resource management it should be followed by
% \cs{DeclareDocumentMetadata}\marg{key-val}.
% The options of \cs{DeclareDocumentMetadata} are described in the documentation of
% \pkg{ltdocinit}.
%
% \begin{verbatim}
% \RequirePackage{pdfmanagement} %load the package
% \DeclareDocumentMetadata %activates the l3management interface
%  {
%    %options
%  }
%  \documentclass {...}
% \end{verbatim}
%
% The pdf management can be deactivated either by commenting the
% \cs{DeclareDocumentMetadata} or by using in the option \texttt{pdfmanagement=false}.
%
% To test if the pdf management is active the predicate
% \cs{pdfmanagement_if_active:TF} can be used, see the documentation of \pkg{l3pdfmanagement}.
%
% \section{Requirements}
% \pkg{pdfmanagement} requires a LaTeX format from 2020/10/01 or later.
% It currently depends on the experimental packages \pkg{l3ref-tmp} and \pkg{l3bitset}.
% In some places, e.g. when writing strings to the pdf it assumes that
% the file is utf8 encoded -- ascii will naturally work too, but 8bit encodings are
% not supported.
%
% \section{Modules}
% The bundle contains a number of modules. The organization and naming is bound
% to change over time.
%
% \begin{description}
% \item[l3pdfdict] This modules provides commands for PDF dictionaries. Its main
% purpose is to create name spaces. It is used e.g. by \pkg{l3pdfmanagement} and
% \pkg{l3pdfannot} but can also be loaded independently from the bundle.
%
% \item[l3pdfannot] This module provides commands for annotations. Currently mainly
% link annotations, widget will be added later. It can be used independantly from
% from the bundle. It doesn't require the pdf management to be active.
%
% \item[l3pdfmanagement] This is the code code of the pdf management.
% It should not be loaded directly, but only as described in section~\ref{sec:use}.
%
% \item[ltdocinit] This package provides the \cs{DeclareDocumentMetadata} commands.
% It should not be loaded directly.
%
% \item[hyperref-generic] This package provides a new hyperref driver. It will
% be loaded automatically by hyperref if the pdfmanagement code is active.
% It should not be loaded directly.
%
% \item[l3backend-pdf-extra] This module contains backend code needed by the
% pdf management. It will in due time be integrated into l3backend.
% It should not be loaded directly.
%
% \item[l3pdfmeta] This module contains code to handle PDF standards and XMP-metadata.
% It is quite incomplete currently. It is loaded by the bundle, and
% should not be loaded independently.
%
% \item[l3pdfutils] A number of commands  like e.g. for xform objects.
% It will probably disappear. It is loaded by the bundle, and
% should not be loaded independently.
%
% \item[l3pdftool] A number of commands like text conversion commands and
% bcd/emc.  It will probably disappear. It is loaded by the bundle, and
% should not be loaded independently.
%
% \section{Incompabilities}
%
% As described in section~\ref{sec:change}, if activated
% the package takes over the management of core PDF dictionaries. All packages
% that bypass this package and access these dictionaries with primitives like
% \cs{pdfcatalog}, \cs{pdfinfo}, \cs{pdfpageresources}, \cs{pdfpagesattr}
% and \cs{pdfpageattr} or similar commands from other engines and backends are
% basically incompatible: values can get lost or be wrong.
%
% The following describes known incompatible packages along with some suggestions
% how this should or will be handled in future. The list is not exhaustive.
%
% \subsection{hyperref}
% A generic driver that can
% be used as replacement has been developed and is provided by this bundle.
% It will be loaded automatically if the pdf management is active.
%
% The generic driver differs in some points from other \pkg{hyperref} drivers:
% \begin{itemize}
% \item The code for bookmarks has been removed from this driver, instead
% the \pkg{bookmarks} package should be loaded after \pkg{hyperref}.
% \item The driver isn't yet fully integrated into hyperref. This means that
% it doesn't react to a number of package options. Instead \cs{hypersetup} should
% be used.
% \item Incomplete is the support for form fields. Quite probably form fields will
% be extracted in a dedicated package.
% \end{itemize}
%
% More details can be found in the documentation \pkg{hyperref-generic.pdf}.
%
% \subsection{pdfx}
% \pkg{pdfx} is not compatible. It uses the commands \cs{pdfpagesattr}, \cs{pdfpageattr},
% \cs{pdfinfo} and \cs{pdfcatalog}. The needed changes are not many, but can
% not be done by external patches.
%
% It is also one goal of the pdfmanagement project to
% offer support for standards natively. The code is under development.
% At first pdf/A will be handled, pdf/X then later.
%
% \subsection{hyperxmp}
% \pkg{hyperxmp} uses \cs{pdfcatalog} to insert the \texttt{/MetaData} reference. This
% makes it incompatible, but adjusting this is even possible with external
% patches. \pkg{hyperxmp} also relies on some \pkg{hyperref} internals, so
% changes in \pkg{hyperref} must be coordinated.
%
% \subsection{tikz/pgf}
% \pkg{pgf} writes to the page resources too and so is incompatible. The needed
% changes are rather small and will be done in coordination with the maintainer.
% Until this works, \pkg{pagemanagement} can be loaded with the option \texttt{patches}
% which will add the needed patches.
%
% \subsection{transparent}
% The package \pkg{transparent} is incompatible. A replacement has been written
% (\pkg{new-transparent}) and will be merged into the package.
%
% \subsection{pdflscape}
% The package \pkg{pdflscape} is incompatible. A replacement has been written
% (\pkg{new-pdflscape}) and will be merged into the package.
%
% \subsection{colorspace}
% The package is incompatible. It works more or less with the option \texttt{patches}.
% Alternative code for spot colors is under development
% in the \pkg{l3color} package.
%
% \subsection{embedfile}
% Tools needed to be able to write a replacement
% to replace this package have been developed in the \pkg{l3pdffile} package.
%
% \subsection{tagpdf}
% The development code is compatible and will be uploaded in time.
%
% \subsection{ocgx2, animate, media9}
% These package all make use of low-level PDF command and will
% have to be reviewed.
%
% \subsection{acrotex}
% The \pkg{acrotex} makes heavy use of PDF commands and so must be reviewed and
% adapted, including the currently untested route dvips + distiller.
%
% \subsection{fancytooltips}
% This package uses \cs{pdfpageattr} and \pkg{acrotex} and so must be reviewed.
% \end{documentation}
% \begin{implementation}
%    \begin{macrocode}
%<@@=pdf>
%<*package>
\ProvidesExplPackage {pdfmanagement} {2020-11-26} {0.8}
  {experimental pdf-resource management}
\providecommand\IfFormatAtLeastTF{\@ifl@t@r\fmtversion}
\IfFormatAtLeastTF{2020-10-01}{}{%
 \PackageWarning{pdfmanagement}{This~package~needs~LaTeX~2020-10-01~or~newer.\MessageBreak Loading~is~aborted.}{}
 \DeclareOption { debug }{}
 \DeclareOption { patches }{}
 \newcommand\DeclareDocumentMetadata[1]{}%
 \ProcessOptions\relax
 }
\IfFormatAtLeastTF{2020-10-01}{}{\endinput}

\DeclareOption { debug }
  {
    \msg_redirect_module:nnn { pdf } { none } { warning }
  }
\DeclareOption { patches }
  {
    %nothing
  }
\ProcessOptions\relax
%</package>
%    \end{macrocode}
% \section{Loading the core files.}
% This loads the core files. The backend should not be loaded
% to allow to set it in the document.
%    \begin{macrocode}
%<*package>
\RequirePackage{l3pdfdict}       % needed by l3pdfmanagement
\RequirePackage{l3pdfmanagement} % loads the core code with the boolean
\RequirePackage{ltdocinit}       % DeclareDocumentMetadata, l3pdfannot, l3pdfutils
% optional?
\RequirePackage{l3pdfmeta}       %
\RequirePackage{l3pdftools}

%</package>
%    \end{macrocode}
% \end{implementation}
% \newpage
% \PrintIndex
